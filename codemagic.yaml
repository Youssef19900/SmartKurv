workflows:
  ios_release:
    name: SmartKurv iOS (TestFlight)
    environment:
      xcode: latest
      groups:
        - smartkurv   # APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, P12_PASSWORD
      vars:
        APP_BUNDLE_ID: com.youssef19900.SmartKurv
        TEAM_ID: GUYJ52Y55V
        APPLE_APP_ID: "6753662256"

    scripts:
      - name: "Install tools"
        script: |
          set -euxo pipefail
          brew install xcodegen
          pip3 install --upgrade codemagic-cli-tools

      - name: "Regenerate project (fresh)"
        script: |
          set -euxo pipefail
          rm -rf SmartKurv.xcodeproj
          xcodegen generate --spec project.yml

      - name: "Sanity: ensure manual signing and no hardcoded CNs"
        script: |
          set -euxo pipefail
          PBX="SmartKurv.xcodeproj/project.pbxproj"
          cp "$PBX" "$PBX.bak" || true
          /usr/bin/sed -i '' -e 's/Apple Distribution: [^"]*/Apple Distribution/g' "$PBX" || true
          /usr/bin/sed -i '' \
            -e 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' \
            -e 's/PROVISIONING_PROFILE_SPECIFIER = "[^"]*";/PROVISIONING_PROFILE_SPECIFIER = "";/g' \
            -e 's/PROVISIONING_PROFILE = "[^"]*";/PROVISIONING_PROFILE = "";/g' \
            "$PBX" || true
          grep -E 'CODE_SIGN_STYLE|CODE_SIGN_IDENTITY|PROVISIONING_PROFILE' "$PBX" || true

      - name: "Import existing .p12 into keychain"
        script: |
          set -euxo pipefail
          keychain initialize
          # Codemagic lægger .p12 i build-mappen hvis den er uploadet under Code signing (iOS).
          # Prøv både Code signing-sti og Secure files:
          P12_PATH="$(ls "$CM_BUILD_DIR"/**/*.p12 "$CM_BUILD_DIR"/secure_files/*.p12 2>/dev/null | head -n 1 || true)"
          if [ -z "${P12_PATH:-}" ]; then
            echo "Kunne ikke finde en .p12 i build-miljøet. Upload din AppleDistribution.p12 i Code signing (iOS) eller som Secure file."
            exit 1
          fi
          echo "Bruger p12: $P12_PATH"
          keychain add-certificates --certificate "$P12_PATH" --certificate-password "$P12_PASSWORD"

      - name: "Fetch provisioning profiles (no new certs)"
        script: |
          set -euxo pipefail
          PROFILES_DIR="$CM_BUILD_DIR/profiles"
          mkdir -p "$PROFILES_DIR"
          app-store-connect fetch-profiles \
            "$APP_BUNDLE_ID" \
            --type IOS_APP_STORE \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --download-directory "$PROFILES_DIR"
          echo "Profiler hentet:"
          ls -la "$PROFILES_DIR" || true

      - name: "Apply profiles to Xcode project"
        script: |
          set -euxo pipefail
          PROFILES_DIR="$CM_BUILD_DIR/profiles"
          xcode-project use-profiles --project SmartKurv.xcodeproj --profiles "$PROFILES_DIR"
          # Diagnose
          xcodebuild -project SmartKurv.xcodeproj -scheme SmartKurv -showBuildSettings | \
            grep -E 'CODE_SIGN_STYLE|DEVELOPMENT_TEAM|PRODUCT_BUNDLE_IDENTIFIER|PROVISIONING_PROFILE_SPECIFIER|CODE_SIGN_IDENTITY' || true

      - name: "Build archive (codesigned)"
        script: |
          set -euxo pipefail
          xcodebuild \
            -project SmartKurv.xcodeproj \
            -scheme SmartKurv \
            -configuration Release \
            -archivePath "$CM_BUILD_DIR/SmartKurv.xcarchive" \
            -sdk iphoneos \
            -allowProvisioningUpdates \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            archive

      - name: "Write exportOptions.plist (App Store)"
        script: |
          set -euxo pipefail
          cat > "$CM_BUILD_DIR/exportOptions.plist" << 'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>uploadSymbols</key><true/>
            <key>compileBitcode</key><false/>
            <key>destination</key><string>export</string>
          </dict>
          </plist>
          PLIST

      - name: "Export .ipa"
        script: |
          set -euxo pipefail
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/SmartKurv.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/exportOptions.plist" \
            -exportPath "$CM_BUILD_DIR/exported"

      - name: "Publish to TestFlight"
        script: |
          set -euxo pipefail
          app-store-connect publish \
            --apple-id "$APPLE_APP_ID" \
            --path "$CM_BUILD_DIR/exported/SmartKurv.ipa"

    artifacts:
      - "$CM_BUILD_DIR/exported/*.ipa"
